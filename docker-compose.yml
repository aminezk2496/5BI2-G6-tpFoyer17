services:
  mysqldb:
    image: 'mysql:8.0'
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: tpFoyer17
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - "3306:3306"
    networks:
      - mynetwork
    volumes:
      - db:/var/lib/mysql

  spring-app:
    image: "192.168.33.10:8084/repository/docker-hosted/aminezarrouk/tpfoyer17:${BUILD_NUMBER}"
    restart: on-failure
    environment:
      SPRING_DATASOURCE_URL: "jdbc:mysql://mysqldb:3306/tpFoyer17?createDatabaseIfNotExist=true&useUnicode=true"
      SPRING_DATASOURCE_USERNAME: "root"
      SPRING_DATASOURCE_PASSWORD: ""
      spring.jpa.hibernate.ddl-auto: "update"
      spring.jpa.properties.hibernate.dialect: "org.hibernate.dialect.MySQL8Dialect"
    ports:
      - "8084:8084"
    depends_on:
      - mysqldb
    networks:
      - mynetwork

  angular-app:
    image: "aminezarrouk/tpfoyer17angular:${BUILD_NUMBER}"
    restart: unless-stopped
    ports:
      - "8287:80"  # Mapper le port 80 du conteneur vers le port 8287 sur l'h√¥te
    networks:
      - mynetwork
    depends_on:
      - spring-app

networks:
  mynetwork:
    driver: bridge

volumes:
  db:
